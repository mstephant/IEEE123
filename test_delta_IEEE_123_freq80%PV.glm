//123-meter generated by script
//Deltamode components added in
//Used to test various powerflow components in deltamode
//Modified from base version for this testing purpose

//#set pauseatexit=1
#set relax_naming_rules=1
#define rotor_convergence=0.001

clock {
	timezone "PST+8PDT";
	starttime '2010-01-01 12:00:00 PST';
	stoptime '2010-01-01 12:10:00 PST';
}
#set relax_naming_rules=1
#set suppress_repeat_messages=1
#set profiler=1
#set double_format=%+.12lg
#set complex_format=%+.12lg%+.12lg%c

//Deltamode declarations - global values
#set deltamode_maximumtime=5000000000000
#set deltamode_iteration_limit=10		//Iteration limit

module tape;

module powerflow {
	enable_subsecond_models true;
	deltamode_timestep 10 ms;
	line_capacitance true;
	all_powerflow_delta true;
	solver_method NR;
	maximum_voltage_error 1e-3;
};
module generators {
	enable_subsecond_models true;	//Enables deltamode for generator module
	deltamode_timestep 10.0 ms;	//Desired timestep for the generator module models
};

//include configurations
//#include "data_configurations_delta_123node.glm";

//Pure meters

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter3.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_3;
	groupid metervolts;
	phases CN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter8.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_8;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_8;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter13.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_13;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter14.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_14;
	groupid metervolts;
	phases AN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_14;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter15.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_15;
	groupid metervolts;
	phases CN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_15;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter18.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_18;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter21.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_21;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_21;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter23.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_23;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_23;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter25.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_25;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_25;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter26.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_26;
	groupid metervolts;
	phases ACN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter27.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_27;
	groupid metervolts;
	phases ACN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_27;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter36.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_36;
	groupid metervolts;
	phases ABN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_36;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter40.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_40;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_40;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter44.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_44;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_44;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter54.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_54;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_54;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter57.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_57;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_57;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter61.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_61;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_61;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter67.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_67;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter72.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_72;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_72;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter78.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_78;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_78;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter81.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_81;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_81;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter89.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_89;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_89;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter91.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_91;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}


object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter93.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_93;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_93;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter97.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_97;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_97;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter101.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_101;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter105.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_105;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_105;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}



object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter108.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_108;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_108;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter110.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_110;
	groupid metervolts;
	phases AN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_110;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter135.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_135;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_135;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter149.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_149;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter {
	name meter_150;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
	bustype SWING;
	voltage_A 2401.777120+0.000000j;
	voltage_B -1200.888560-2080.000000j;
	voltage_C -1200.888560+2080.000000j;
	object recorder {
		flags DELTAMODE;
		property measured_power.real,measured_power.imag;
		file testpowermeas.csv;
		interval 1;
	};
		object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter150.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
}

object diesel_dg {
    parent meter_150;
    name Gen_Bus_1;
    Rated_V 4160.0;			//"nominal line-line voltage in Volts",
    Rated_VA 100.0 MVA;                   //Arbitrary size("nominal capacity in VA")
    flags DELTAMODE;
    Gen_type DYN_SYNCHRONOUS;
    Exciter_type SEXS;                  //Give it voltage control
    Governor_type DEGOV1;               //Make it try to maintain frequency
    rotor_speed_convergence ${rotor_convergence};
    object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file production_swing_outputs/SWINGNODE.csv;
		interval 1;	
		limit 100000000000;
		property power_out_A.real, power_out_A.imag, power_out_B.real, power_out_B.imag, power_out_C.real, power_out_C.imag;
   };    
};

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter151.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_151;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_151;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter152.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_152;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_152;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter160.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_160;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_160;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter197.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_197;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_197;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter250.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_250;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_250;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter300.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_300;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_300;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter450.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_450;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}
object inverter {
	phases ABCN;
	parent meter_450;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}



object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
 	object recorder {                            
		flags DELTAMODE;	//Must explicitly set the recorder to do deltamode
		file meters_outputs/meter610.csv;
		interval 1;	
		limit 100000000000;
		property measured_angle_A, measured_angle_B, measured_angle_C, measured_frequency_A, measured_frequency_B, measured_frequency_C, measured_frequency, measured_power.real, measured_power.imag, measured_power_A.real, measured_power_A.imag, measured_power_B.real, measured_power_B.imag, measured_power_C.real, measured_power_C.imag;
	};
	name meter_610;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object inverter {
	phases ABCN;
	parent meter_610;
	inverter_efficiency .95;
	rated_power 6000;	
        generator_mode CONSTANT_PF;
        generator_status ONLINE;
        inverter_type PWM; 
        flags DELTAMODE;
        dynamic_model_mode PID;
        inverter_convergence_criterion 0.001;
        power_factor 1.0;
        object solar {
	        phases ABCN;
	        generator_status ONLINE;
	        generator_mode SUPPLY_DRIVEN;
	        panel_type SINGLE_CRYSTAL_SILICON;
	        area 250 ft^2;
	        tilt_angle 47.0;
	        efficiency 0.135;
	};
}


// other meters
object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
	name meter_901;
	groupid metervolts;
	phases AN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
	name meter_2501;
	groupid metervolts;
	phases ACN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
	name meter_6101;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
	name meter_15001;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

object meter { 
    flags DELTAMODE;
    frequency_measure_type PLL;
	name meter_16001;
	groupid metervolts;
	phases ABCN;
	nominal_voltage 2401.7771;
}

//Pure spot loads

object load {
        flags DELTAMODE;
	name 001;
	groupid metervolts;
	phases ABCN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}


object load {
        flags DELTAMODE;
	name 002;
	groupid metervolts;
	phases BN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 004;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 005;
	groupid metervolts;
	phases CN;
	constant_current_C -0.557814+9.293330j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 006;
	groupid metervolts;
	phases CN;
	constant_impedance_C 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 007;
	groupid metervolts;
	phases ABCN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
    flags DELTAMODE;
	name 009;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0010;
	groupid metervolts;
	phases AN;
	constant_current_A 8.327167-4.163584j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0011;
	groupid metervolts;
	phases AN;
	constant_impedance_A 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0012;
	groupid metervolts;
	phases BN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0016;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0017;
	groupid metervolts;
	phases CN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0019;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0020;
	groupid metervolts;
	phases AN;
	constant_current_A 16.654335-8.327167j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0022;
	groupid metervolts;
	phases BN;
	constant_impedance_B 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0024;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0028;
	groupid metervolts;
	phases ABCN;
	constant_current_A 16.654335-8.327167j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0029;
	groupid metervolts;
	phases ABCN;
	constant_impedance_A 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0030;
	groupid metervolts;
	phases ABCN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0031;
	groupid metervolts;
	phases CN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0032;
	groupid metervolts;
	phases CN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0033;
	groupid metervolts;
	phases AN;
	constant_current_A 16.654335-8.327167j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0034;
	groupid metervolts;
	phases CN;
	constant_impedance_C 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0035;
	groupid metervolts;
	phases ABCD;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0037;
	groupid metervolts;
	phases AN;
	constant_impedance_A 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0038;
	groupid metervolts;
	phases BN;
	constant_current_B -7.769353-5.129747j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0039;
	groupid metervolts;
	phases BN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0041;
	groupid metervolts;
	phases CN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0042;
	groupid metervolts;
	phases ABCN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0043;
	groupid metervolts;
	phases BN;
	constant_impedance_B 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0045;
	groupid metervolts;
	phases AN;
	constant_current_A 8.327167-4.163584j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0046;
	groupid metervolts;
	phases AN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0047;
	groupid metervolts;
	phases ABCN;
	constant_current_A 14.572543-10.408959j;
	constant_current_B -16.300695-7.415713j;
	constant_current_C 1.728152+17.824672j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0048;
	groupid metervolts;
	phases ABCN;
	constant_impedance_A 54.567207+38.976577j;
	constant_impedance_B 54.567207+38.976577j;
	constant_impedance_C 54.567207+38.976577j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0049;
	groupid metervolts;
	phases ABCN;
	constant_power_A 35000.000000+25000.000000j;
	constant_power_B 70000.000000+50000.000000j;
	constant_power_C 35000.000000+20000.000000j;
	nominal_voltage 2401.7771;
	// object recorder {
		// flags DELTAMODE;
		// property "voltage_A,voltage_B,voltage_C";
		// interval 1;
		// file 00voltage_output.csv;
	// };
}

object load {
        flags DELTAMODE;
	name 0050;
	groupid metervolts;
	phases ABCN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0051;
	groupid metervolts;
	phases ABCN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0052;
	groupid metervolts;
	phases ABCN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0053;
	groupid metervolts;
	phases ABCN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0055;
	groupid metervolts;
	phases ABCN;
	constant_impedance_A 230.741333+115.370667j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0056;
	groupid metervolts;
	phases ABCN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0058;
	groupid metervolts;
	phases BN;
	constant_current_B -7.769353-5.129747j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0059;
	groupid metervolts;
	phases BN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0060;
	groupid metervolts;
	phases ABCN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0062;
	groupid metervolts;
	phases ABCN;
	constant_impedance_C 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0063;
	groupid metervolts;
	phases ABCN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0064;
	groupid metervolts;
	phases ABCN;
	constant_current_B -28.233631-19.756998j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0065;
	groupid metervolts;
	phases ABCD;
	constant_impedance_A 327.403243+233.859459j;
	constant_impedance_B 327.403243+233.859459j;
	constant_impedance_C 163.701622+116.929730j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0066;
	groupid metervolts;
	phases ABCN;
	constant_power_C 75000.000000+35000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0068;
	groupid metervolts;
	phases AN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0069;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0070;
	groupid metervolts;
	phases AN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0071;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0073;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0074;
	groupid metervolts;
	phases CN;
	constant_impedance_C 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0075;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0076;
	groupid metervolts;
	phases ABCD;
	constant_current_A 31.474199-4.034142j;
	constant_current_B -12.019231-16.826923j;
	constant_current_C -8.562927+18.822421j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0077;
	groupid metervolts;
	phases ABCN;
	constant_power_B 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0079;
	groupid metervolts;
	phases ABCN;
	constant_impedance_A 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0080;
	groupid metervolts;
	phases ABCN;
	constant_power_B 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0082;
	groupid metervolts;
	phases ABCN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0083;
	groupid metervolts;
	phases ABCN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0084;
	groupid metervolts;
	phases CN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0085;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0086;
	groupid metervolts;
	phases ABCN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0087;
	groupid metervolts;
	phases ABCN;
	constant_power_B 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0088;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0090;
	groupid metervolts;
	phases BN;
	constant_current_B -15.538706-10.259493j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0092;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0094;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0095;
	groupid metervolts;
	phases ABCN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0096;
	groupid metervolts;
	phases BN;
	constant_power_B 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0098;
	groupid metervolts;
	phases ABCN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 0099;
	groupid metervolts;
	phases ABCN;
	constant_power_B 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00100;
	groupid metervolts;
	phases ABCN;
	constant_impedance_C 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00102;
	groupid metervolts;
	phases CN;
	constant_power_C 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00103;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00104;
	groupid metervolts;
	phases CN;
	constant_power_C 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00106;
	groupid metervolts;
	phases BN;
	constant_power_B 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00107;
	groupid metervolts;
	phases BN;
	constant_power_B 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00109;
	groupid metervolts;
	phases AN;
	constant_power_A 40000.000000+20000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00111;
	groupid metervolts;
	phases AN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00112;
	groupid metervolts;
	phases AN;
	constant_current_A 8.327167-4.163584j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00113;
	groupid metervolts;
	phases AN;
	constant_impedance_A 115.370667+57.685333j;
	nominal_voltage 2401.7771;
}

object load {
        flags DELTAMODE;
	name 00114;
	groupid metervolts;
	phases AN;
	constant_power_A 20000.000000+10000.000000j;
	nominal_voltage 2401.7771;
}
// collectors 

object collector {
	        flags DELTAMODE;
	        group "class=load"; 
	        file consumption_outputs/consumption.csv;
	        interval 1;
	        limit 100000000000;
	        property sum(constant_power_A_real), sum(constant_power_A_reac), sum(constant_power_B_real), sum(constant_power_B_reac), sum(constant_power_C_real), sum(constant_power_C_reac);
}

object collector {
        group "class=solar";
        flags DELTAMODE;
        property sum(VA_Out.real), sum(VA_Out.imag);
        file production_pv_outputs/solar_prod.csv;
	interval 1;	
	limit 100000000000;
   };   

//Triplex meters/meters/loads
object triplex_meter {
	flags DELTAMODE;
	name spct_meter;
	phases BS;
	nominal_voltage 120.0;
}

object triplex_meter {
	flags DELTAMODE;
	name triplex_meter_meter;
	phases BS;
	nominal_voltage 120.0;
	// object recorder {
		// flags DELTAMODE;
		// property "voltage_1,voltage_2,voltage_12,measured_power";
		// interval 1;
		// file triplex00voltage_output.csv;
	// };
}

object triplex_load {
	flags DELTAMODE;
	name triplex_00device;
	phases BS;
	nominal_voltage 120.0;
	constant_power_12 3500.000000+2500.000000j;
}

//SPCT transformer
object transformer {
	name spct_transformer_triplex;
	phases BS;
	from meter_610;
	to spct_meter;
	configuration spct_config_B;
}

//Triplex lines
object triplex_line {
	phases BS;
	name SPCT_to_meter;
	from spct_meter;
	to triplex_meter_meter;
	length 50.0 ft;
	configuration tplex_line_cfg;
}

object triplex_line {
	phases BS;
	name meter_to_load;
	from triplex_meter_meter;
	to triplex_00device;
	length 25.0 ft;
	configuration tplex_line_cfg;
}





//distributed loads intermediates (2/3 load at 1/4 line)

//pure distributed loads (1/3 load at end of line)

//combination loads (1/3 dist load and spot load)

//Pure lines (no distributed loads)

object overhead_line {
	name line1to2;
	phases BN;
	from 001;
	to 002;
	length 175.00;
	configuration lc310;
}

object overhead_line {
	name line1to3;
	phases CN;
	from 001;
	to meter_3;
	length 250.00;
	configuration lc311;
}

object overhead_line {
	name line1to7;
	phases ABCN;
	from 001;
	to 007;
	length 300.00;
	configuration lc301;
}

object overhead_line {
	name line3to4;
	phases CN;
	from meter_3;
	to 004;
	length 200.00;
	configuration lc311;
}

object overhead_line {
	name line3to5;
	phases CN;
	from meter_3;
	to 005;
	length 325.00;
	configuration lc311;
}

object overhead_line {
	name line5to6;
	phases CN;
	from 005;
	to 006;
	length 250.00;
	configuration lc311;
}

object overhead_line {
	name line7to8;
	phases ABCN;
	from 007;
	to meter_8;
	length 200.00;
	configuration lc301;
}

object overhead_line {
	name line8to12;
	phases BN;
	from meter_8;
	to 0012;
	length 225.00;
	configuration lc310;
}

object overhead_line {
	name line8to9;
	phases AN;
	from meter_8;
	to 009;
	length 225.00;
	configuration lc309;
}

object overhead_line {
	name line8to13;
	phases ABCN;
	from meter_8;
	to meter_13;
	length 300.00;
	configuration lc301;
}

object overhead_line {
	name line901to14;
	phases AN;
	from meter_901;
	to meter_14;
	length 425.00;
	configuration lc309;
}

object overhead_line {
	name line13to34;
	phases CN;
	from meter_13;
	to 0034;
	length 150.00;
	configuration lc311;
}

object overhead_line {
	name line13to18;
	phases ABCN;
	from meter_13;
	to meter_18;
	length 825.00;
	configuration lc302;
}

object overhead_line {
	name line14to11;
	phases AN;
	from meter_14;
	to 0011;
	length 250.00;
	configuration lc309;
}

object overhead_line {
	name line14to10;
	phases AN;
	from meter_14;
	to 0010;
	length 250.00;
	configuration lc309;
}

object overhead_line {
	name line15to16;
	phases CN;
	from meter_15;
	to 0016;
	length 375.00;
	configuration lc311;
}

object overhead_line {
	name line15to17;
	phases CN;
	from meter_15;
	to 0017;
	length 350.00;
	configuration lc311;
}

object overhead_line {
	name line18to19;
	phases AN;
	from meter_18;
	to 0019;
	length 250.00;
	configuration lc309;
}

object overhead_line {
	name line18to21;
	phases ABCN;
	from meter_18;
	to meter_21;
	length 300.00;
	configuration lc302;
}

object overhead_line {
	name line19to20;
	phases AN;
	from 0019;
	to 0020;
	length 325.00;
	configuration lc309;
}

object overhead_line {
	name line21to22;
	phases BN;
	from meter_21;
	to 0022;
	length 525.00;
	configuration lc310;
}

object overhead_line {
	name line21to23;
	phases ABCN;
	from meter_21;
	to meter_23;
	length 250.00;
	configuration lc302;
}

object overhead_line {
	name line23to24;
	phases CN;
	from meter_23;
	to 0024;
	length 550.00;
	configuration lc311;
}

object overhead_line {
	name line23to25;
	phases ABCN;
	from meter_23;
	to meter_25;
	length 275.00;
	configuration lc302;
}

object overhead_line {
	name line2501to26;
	phases ACN;
	from meter_2501;
	to meter_26;
	length 350.00;
	configuration lc307;
}

object overhead_line {
	name line25to28;
	phases ABCN;
	from meter_25;
	to 0028;
	length 200.00;
	configuration lc302;
}

object overhead_line {
	name line26to27;
	phases ACN;
	from meter_26;
	to meter_27;
	length 275.00;
	configuration lc307;
}

object overhead_line {
	name line26to31;
	phases CN;
	from meter_26;
	to 0031;
	length 225.00;
	configuration lc311;
}

object overhead_line {
	name line27to33;
	phases AN;
	from meter_27;
	to 0033;
	length 500.00;
	configuration lc309;
}

object overhead_line {
	name line28to29;
	phases ABCN;
	from 0028;
	to 0029;
	length 300.00;
	configuration lc302;
}

object overhead_line {
	name line29to30;
	phases ABCN;
	from 0029;
	to 0030;
	length 350.00;
	configuration lc302;
}

object overhead_line {
	name line30to250;
	phases ABCN;
	from 0030;
	to meter_250;
	length 200.00;
	configuration lc302;
}

object overhead_line {
	name line31to32;
	phases CN;
	from 0031;
	to 0032;
	length 300.00;
	configuration lc311;
}

object overhead_line {
	name line34to15;
	phases CN;
	from 0034;
	to meter_15;
	length 100.00;
	configuration lc311;
}

object overhead_line {
	name line35to36;
	phases ABN;
	from 0035;
	to meter_36;
	length 650.00;
	configuration lc308;
}

object overhead_line {
	name line35to40;
	phases ABCN;
	from 0035;
	to meter_40;
	length 250.00;
	configuration lc301;
}

object overhead_line {
	name line36to37;
	phases AN;
	from meter_36;
	to 0037;
	length 300.00;
	configuration lc309;
}

object overhead_line {
	name line36to38;
	phases BN;
	from meter_36;
	to 0038;
	length 250.00;
	configuration lc310;
}

object overhead_line {
	name line38to39;
	phases BN;
	from 0038;
	to 0039;
	length 325.00;
	configuration lc310;
}

object overhead_line {
	name line40to41;
	phases CN;
	from meter_40;
	to 0041;
	length 325.00;
	configuration lc311;
}

object overhead_line {
	name line40to42;
	phases ABCN;
	from meter_40;
	to 0042;
	length 250.00;
	configuration lc301;
}

object overhead_line {
	name line42to43;
	phases BN;
	from 0042;
	to 0043;
	length 500.00;
	configuration lc310;
}

object overhead_line {
	name line42to44;
	phases ABCN;
	from 0042;
	to meter_44;
	length 200.00;
	configuration lc301;
}

object overhead_line {
	name line44to45;
	phases AN;
	from meter_44;
	to 0045;
	length 200.00;
	configuration lc309;
}

object overhead_line {
	name line44to47;
	phases ABCN;
	from meter_44;
	to 0047;
	length 250.00;
	configuration lc301;
}

object overhead_line {
	name line45to46;
	phases AN;
	from 0045;
	to 0046;
	length 300.00;
	configuration lc309;
}

object overhead_line {
	name line47to48;
	phases ABCN;
	from 0047;
	to 0048;
	length 150.00;
	configuration lc304;
}

object overhead_line {
	name line47to49;
	phases ABCN;
	from 0047;
	to 0049;
	length 250.00;
	configuration lc304;
}

object overhead_line {
	name line49to50;
	phases ABCN;
	from 0049;
	to 0050;
	length 250.00;
	configuration lc304;
}

object overhead_line {
	name line50to51;
	phases ABCN;
	from 0050;
	to 0051;
	length 250.00;
	configuration lc304;
}

object overhead_line {
	name line51to151;
	phases ABCN;
	from 0051;
	to meter_151;
	length 500.00;
	configuration lc304;
}

object overhead_line {
	name line52to53;
	phases ABCN;
	from 0052;
	to 0053;
	length 200.00;
	configuration lc301;
}

object overhead_line {
	name line53to54;
	phases ABCN;
	from 0053;
	to meter_54;
	length 125.00;
	configuration lc301;
}

object overhead_line {
	name line54to55;
	phases ABCN;
	from meter_54;
	to 0055;
	length 275.00;
	configuration lc301;
}

object overhead_line {
	name line54to57;
	phases ABCN;
	from meter_54;
	to meter_57;
	length 350.00;
	configuration lc303;
}

object overhead_line {
	name line55to56;
	phases ABCN;
	from 0055;
	to 0056;
	length 275.00;
	configuration lc301;
}

object overhead_line {
	name line57to58;
	phases BN;
	from meter_57;
	to 0058;
	length 250.00;
	configuration lc310;
}

object overhead_line {
	name line57to60;
	phases ABCN;
	from meter_57;
	to 0060;
	length 750.00;
	configuration lc303;
}

object overhead_line {
	name line58to59;
	phases BN;
	from 0058;
	to 0059;
	length 250.00;
	configuration lc310;
}

object overhead_line {
	name line60to61;
	phases ABCN;
	from 0060;
	to meter_61;
	length 550.00;
	configuration lc305;
}

object underground_line {
	name line60to62;
	phases ABC;
	from 0060;
	to 0062;
	length 250.00;
	configuration lc312;
}

object underground_line {
	name line62to63;
	phases ABC;
	from 0062;
	to 0063;
	length 175.00;
	configuration lc312;
}

object underground_line {
	name line63to64;
	phases ABC;
	from 0063;
	to 0064;
	length 350.00;
	configuration lc312;
}

object underground_line {
	name line64to65;
	phases ABC;
	from 0064;
	to 0065;
	length 425.00;
	configuration lc312;
}

object underground_line {
	name line65to66;
	phases ABC;
	from 0065;
	to 0066;
	length 325.00;
	configuration lc312;
}

object overhead_line {
	name line67to68;
	phases AN;
	from meter_67;
	to 0068;
	length 200.00;
	configuration lc309;
}

object overhead_line {
	name line67to72;
	phases ABCN;
	from meter_67;
	to meter_72;
	length 275.00;
	configuration lc303;
}

object overhead_line {
	name line67to97;
	phases ABCN;
	from meter_67;
	to meter_97;
	length 250.00;
	configuration lc303;
}

object overhead_line {
	name line68to69;
	phases AN;
	from 0068;
	to 0069;
	length 275.00;
	configuration lc309;
}

object overhead_line {
	name line69to70;
	phases AN;
	from 0069;
	to 0070;
	length 325.00;
	configuration lc309;
}

object overhead_line {
	name line70to71;
	phases AN;
	from 0070;
	to 0071;
	length 275.00;
	configuration lc309;
}

object overhead_line {
	name line72to73;
	phases CN;
	from meter_72;
	to 0073;
	length 275.00;
	configuration lc311;
}

object overhead_line {
	name line72to76;
	phases ABCN;
	from meter_72;
	to 0076;
	length 200.00;
	configuration lc303;
}

object overhead_line {
	name line73to74;
	phases CN;
	from 0073;
	to 0074;
	length 350.00;
	configuration lc311;
}

object overhead_line {
	name line74to75;
	phases CN;
	from 0074;
	to 0075;
	length 400.00;
	configuration lc311;
}

object overhead_line {
	name line76to77;
	phases ABCN;
	from 0076;
	to 0077;
	length 400.00;
	configuration lc306;
}

object overhead_line {
	name line76to86;
	phases ABCN;
	from 0076;
	to 0086;
	length 700.00;
	configuration lc303;
}

object overhead_line {
	name line77to78;
	phases ABCN;
	from 0077;
	to meter_78;
	length 100.00;
	configuration lc306;
}

object overhead_line {
	name line78to79;
	phases ABCN;
	from meter_78;
	to 0079;
	length 225.00;
	configuration lc306;
}

object overhead_line {
	name line78to80;
	phases ABCN;
	from meter_78;
	to 0080;
	length 475.00;
	configuration lc306;
}

object overhead_line {
	name line80to81;
	phases ABCN;
	from 0080;
	to meter_81;
	length 475.00;
	configuration lc306;
}

object overhead_line {
	name line81to82;
	phases ABCN;
	from meter_81;
	to 0082;
	length 250.00;
	configuration lc306;
}

object overhead_line {
	name line81to84;
	phases CN;
	from meter_81;
	to 0084;
	length 675.00;
	configuration lc311;
}

object overhead_line {
	name line82to83;
	phases ABCN;
	from 0082;
	to 0083;
	length 250.00;
	configuration lc306;
}

object overhead_line {
	name line84to85;
	phases CN;
	from 0084;
	to 0085;
	length 475.00;
	configuration lc311;
}

object overhead_line {
	name line86to87;
	phases ABCN;
	from 0086;
	to 0087;
	length 450.00;
	configuration lc306;
}

object overhead_line {
	name line87to88;
	phases AN;
	from 0087;
	to 0088;
	length 175.00;
	configuration lc309;
}

object overhead_line {
	name line87to89;
	phases ABCN;
	from 0087;
	to meter_89;
	length 275.00;
	configuration lc306;
}

object overhead_line {
	name line89to90;
	phases BN;
	from meter_89;
	to 0090;
	length 225.00;
	configuration lc310;
}

object overhead_line {
	name line89to91;
	phases ABCN;
	from meter_89;
	to meter_91;
	length 225.00;
	configuration lc306;
}

object overhead_line {
	name line91to92;
	phases CN;
	from meter_91;
	to 0092;
	length 300.00;
	configuration lc311;
}

object overhead_line {
	name line91to93;
	phases ABCN;
	from meter_91;
	to meter_93;
	length 225.00;
	configuration lc306;
}

object overhead_line {
	name line93to94;
	phases AN;
	from meter_93;
	to 0094;
	length 275.00;
	configuration lc309;
}

object overhead_line {
	name line93to95;
	phases ABCN;
	from meter_93;
	to 0095;
	length 300.00;
	configuration lc306;
}

object overhead_line {
	name line95to96;
	phases BN;
	from 0095;
	to 0096;
	length 200.00;
	configuration lc310;
}

object overhead_line {
	name line97to98;
	phases ABCN;
	from meter_97;
	to 0098;
	length 275.00;
	configuration lc303;
}

object overhead_line {
	name line98to99;
	phases ABCN;
	from 0098;
	to 0099;
	length 550.00;
	configuration lc303;
}

object overhead_line {
	name line99to100;
	phases ABCN;
	from 0099;
	to 00100;
	length 300.00;
	configuration lc303;
}

object overhead_line {
	name line100to450;
	phases ABCN;
	from 00100;
	to meter_450;
	length 800.00;
	configuration lc303;
}

object overhead_line {
	name line101to102;
	phases CN;
	from meter_101;
	to 00102;
	length 225.00;
	configuration lc311;
}

object overhead_line {
	name line101to105;
	phases ABCN;
	from meter_101;
	to meter_105;
	length 275.00;
	configuration lc303;
}

object overhead_line {
	name line102to103;
	phases CN;
	from 00102;
	to 00103;
	length 325.00;
	configuration lc311;
}

object overhead_line {
	name line103to104;
	phases CN;
	from 00103;
	to 00104;
	length 700.00;
	configuration lc311;
}

object overhead_line {
	name line105to106;
	phases BN;
	from meter_105;
	to 00106;
	length 225.00;
	configuration lc310;
}

object overhead_line {
	name line105to108;
	phases ABCN;
	from meter_105;
	to meter_108;
	length 325.00;
	configuration lc303;
}

object overhead_line {
	name line106to107;
	phases BN;
	from 00106;
	to 00107;
	length 575.00;
	configuration lc310;
}

object overhead_line {
	name line108to109;
	phases AN;
	from meter_108;
	to 00109;
	length 450.00;
	configuration lc309;
}

object overhead_line {
	name line108to300;
	phases ABCN;
	from meter_108;
	to meter_300;
	length 1000.00;
	configuration lc303;
}

object overhead_line {
	name line109to110;
	phases AN;
	from 00109;
	to meter_110;
	length 300.00;
	configuration lc309;
}

object overhead_line {
	name line110to111;
	phases AN;
	from meter_110;
	to 00111;
	length 575.00;
	configuration lc309;
}

object overhead_line {
	name line110to112;
	phases AN;
	from meter_110;
	to 00112;
	length 125.00;
	configuration lc309;
}

object overhead_line {
	name line112to113;
	phases AN;
	from 00112;
	to 00113;
	length 525.00;
	configuration lc309;
}

object overhead_line {
	name line113to114;
	phases AN;
	from 00113;
	to 00114;
	length 325.00;
	configuration lc309;
}

object overhead_line {
	name line135to35;
	phases ABCN;
	from meter_135;
	to 0035;
	length 375.00;
	configuration lc304;
}

object overhead_line {
	name line149to1;
	phases ABCN;
	from meter_149;
	to 001;
	length 400.00;
	configuration lc301;
}

object overhead_line {
	name line152to52;
	phases ABCN;
	from meter_152;
	to 0052;
	length 400.00;
	configuration lc301;
}

object overhead_line {
	name line16001to67;
	phases ABCN;
	from meter_16001;
	to meter_67;
	length 350.00;
	configuration lc306;
}

object overhead_line {
	name line197to101;
	phases ABCN;
	from meter_197;
	to meter_101;
	length 250.00;
	configuration lc303;
}

//Lines with distributed loads

//Transformers

object transformer {
	name trans6101to610;
	phases ABCN;
	from meter_6101;
	to meter_610;
	configuration tc500;
}

//Regulators

object regulator {
	name reg150to15001;
	phases ABCN;
	from meter_150;
	to meter_15001;
	configuration rc501;
}

object regulator {
	name reg9to901;
	phases AN;
	from 009;
	to meter_901;
	configuration rc502;
}

object regulator {
	name reg25to2501;
	phases ACN;
	from meter_25;
	to meter_2501;
	configuration rc503;
}

object regulator {
	name reg160to16001;
	phases ABCN;
	from meter_160;
	to meter_16001;
	configuration rc504;
}

//Switches

object switch {
	name sw13to152;
	phases ABCN;
	from meter_13;
	to meter_152;
	status CLOSED;
}

object switch {
	name sw18to135;
	phases ABCN;
	from meter_18;
	to meter_135;
	status CLOSED;
}

object switch {
	name sw60to160;
	phases ABCN;
	from 0060;
	to meter_160;
	status CLOSED;
}

object switch {
	name sw61to6101;
	phases ABCN;
	from meter_61;
	to meter_6101;
	status CLOSED;
}

object switch {
	name sw97to197;
	phases ABCN;
	from meter_97;
	to meter_197;
	status CLOSED;
}

object switch {
	name sw15001to149;
	phases ABCN;
	from meter_15001;
	to meter_149;
	status CLOSED;
}

//Capacitors

object capacitor {
	name cap_83;
	parent 0083;
	phases ABC;
	phases_connected ABC;
	nominal_voltage 2401.7771;
	control MANUAL;
	capacitor_A 200000.0000;
	capacitor_B 200000.0000;
	capacitor_C 200000.0000;
	switchA CLOSED;
	switchB CLOSED;
	switchC CLOSED;
	object player {
		flags DELTAMODE;
		property service_status;
		file test_cap_service.csv;
	};
	object recorder {
		property service_status,shunt_A,shunt_B,shunt_C;
		interval 1;
		flags DELTAMODE;
		file test_out_service.csv;
	};
};

object capacitor {
	name cap_88;
	parent 0088;
	phases A;
	phases_connected A;
	nominal_voltage 2401.7771;
	control MANUAL;
	capacitor_A 50000.0000;
	switchA CLOSED;
};

object capacitor {
	name cap_90;
	parent 0090;
	phases B;
	phases_connected B;
	nominal_voltage 2401.7771;
	control MANUAL;
	capacitor_B 50000.0000;
	switchB CLOSED;
};

object capacitor {
	name cap_92;
	parent 0092;
	phases C;
	phases_connected C;
	nominal_voltage 2401.7771;
	control MANUAL;
	capacitor_C 50000.0000;
	switchC CLOSED;
};


// ----- Configuration


//Conductors
object overhead_line_conductor {
	name olc301c;	//336,400 26/7 ACSR
	geometric_mean_radius 0.0244;
	resistance 0.306;
	diameter 0.721;
}

object overhead_line_conductor {
	name olc301n;	//4/0 6/1 ACSR
	geometric_mean_radius 0.00814;
	resistance 0.592;
	diameter 0.563;
}

object overhead_line_conductor {
	name olc309;	//1/0 ACSR
	geometric_mean_radius 0.004460;
	resistance 1.120000;
	diameter 0.398;
}

object underground_line_conductor {
	name ulc312;	//1/0 AA, CN
	outer_diameter 1.06;
	conductor_gmr 0.0111;
	conductor_diameter 0.368;
	conductor_resistance 0.97;
	neutral_gmr 0.00208;
	neutral_resistance 14.8722;
	neutral_diameter 0.0640837;
	neutral_strands 16.0;
}

//Line spacings
//ABCN
object line_spacing {
	name ls500301;
	distance_AB 2.5;
	distance_AC 7.0;
	distance_BC 4.5;
	distance_CN 5.0;
	distance_AN 5.65685424949;
	distance_BN 4.27200187266;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//CABN
object line_spacing {
	name ls500302;
	distance_AB 4.5;
	distance_AC 2.5;
	distance_BC 7.0;
	distance_AN 4.27200187266;
	distance_CN 5.65685424949;
	distance_BN 5.0;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//BCAN
object line_spacing {
	name ls500303;
	distance_AB 7.0;
	distance_AC 4.5;
	distance_BC 2.5;
	distance_AN 5.0;
	distance_BN 5.65685424949;
	distance_CN 4.27200187266;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//CBAN
object line_spacing {
	name ls500304;
	distance_AB 4.5;
	distance_AC 7.0;
	distance_BC 2.5;
	distance_AN 5.0;
	distance_BN 4.27200187266;
	distance_CN 5.65685424949;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//BACN
object line_spacing {
	name ls500305;
	distance_AB 2.5;
	distance_AC 4.5;
	distance_BC 7.0;
	distance_CN 5.0;
	distance_AN 4.27200187266;
	distance_BN 5.65685424949;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//ACBN
object line_spacing {
	name ls500306;
	distance_AB 2.5;
	distance_AC 7.0;
	distance_BC 4.5;
	distance_CN 5.0;
	distance_BN 4.27200187266;
	distance_AN 5.65685424949;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//ACN
object line_spacing {
	name ls505307;
	distance_AC 7.0;
	distance_AN 5.65685424949;
	distance_CN 5.0;
	distance_AE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

//ABN
object line_spacing {
	name ls505308;
	distance_AB 7.0;
	distance_AN 5.65685424949;
	distance_BN 5.0;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_NE 24.0;
}

//AN
object line_spacing {
	name ls510309;
	distance_AN 5.024937811;
	distance_AE 28.0;
	distance_NE 24.0;
}

//BN
object line_spacing {
	name ls510310;
	distance_BN 5.024937811;
	distance_BE 28.0;
	distance_NE 24.0;
}

//CN
object line_spacing {
	name ls510311;
	distance_CN 5.024937811;
	distance_CE 28.0;
	distance_NE 24.0;
}

//UGL - ABC
object line_spacing {
	name ls515312;
	distance_AB 0.5;
	distance_AC 1.0;
	distance_BC 0.5;
}

//Line configurations
//ABCN
object line_configuration {
	name lc301;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500301;
}

//CABN
object line_configuration {
	name lc302;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500302;
}

//BCAN
object line_configuration {
	name lc303;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500303;
}

//CBAN
object line_configuration {
	name lc304;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500304;
}

//BACN
object line_configuration {
	name lc305;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500305;
}

//ACBN
object line_configuration {
	name lc306;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500306;
}

//ACN
object line_configuration {
	name lc307;
	conductor_A olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls505307;
}

//ABN
object line_configuration {
	name lc308;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_N olc301n;
	spacing ls505308;
}

//AN
object line_configuration {
	name lc309;
	conductor_A olc309;
	conductor_N olc309;
	spacing ls510309;
}

//BN
object line_configuration {
	name lc310;
	conductor_B olc309;
	conductor_N olc309;
	spacing ls510310;
}

//CN
object line_configuration {
	name lc311;
	conductor_C olc309;
	conductor_N olc309;
	spacing ls510311;
}

//ABC
object line_configuration {
	name lc312;
	conductor_A ulc312;
	conductor_B ulc312;
	conductor_C ulc312;
	spacing ls515312;
}

//Transformer configurations
object transformer_configuration {
	name tc500;
	connect_type DELTA_DELTA;
	install_type PADMOUNT;
	power_rating 150.0 kVA;
	primary_voltage 4160.0;
	secondary_voltage 480.0;
	resistance 0.0127;
	reactance 0.0272;
}

//SPCT transformer configuration - lifted from random file
object transformer_configuration {
	name spct_config_B;
	connect_type SINGLE_PHASE_CENTER_TAPPED;
	primary_voltage 2401.7771;
	secondary_voltage 120.0;
	power_rating 200.0 kVA;
	powerB_rating 200.0 kVA;
	impedance 0.00998+0.04491j;     
	shunt_impedance 1503.7594+6766.9173j;     
}

//Triplex configuration - stolen from another file
object triplex_line_conductor {     
      name F2407-4/0_AA_triplex;     
      resistance 0.484;     
      geometric_mean_radius 0.0158;     
      rating.summer.continuous 299;     
}       

object triplex_line_configuration {     
      name tplex_line_cfg;     
      conductor_1 F2407-4/0_AA_triplex;     
      conductor_2 F2407-4/0_AA_triplex;     
      conductor_N F2407-4/0_AA_triplex;     
      insulation_thickness 0.08;     
      diameter 0.522;     
}       
	
// Regulator configs
object regulator_configuration {
	name rc501;
	connect_type 1;
	band_center 120.000;
	band_width 2.0;
	time_delay 30.0;
	raise_taps 16;
	lower_taps 16;
	current_transducer_ratio 700;
	power_transducer_ratio 20;
	compensator_r_setting_A 3.0;
	compensator_x_setting_A 7.5;
	CT_phase "A";
	PT_phase "A";
	regulation 0.10;
	Control MANUAL;
	Type A;
	tap_pos_A 7;
	tap_pos_B 7;
	tap_pos_C 7;
}

object regulator_configuration {
	name rc502;
	connect_type 1;
	band_center 120.000;
	band_width 2.0;
	time_delay 30.0;
	raise_taps 16;
	lower_taps 16;
	current_transducer_ratio 50;
	power_transducer_ratio 20;
	compensator_r_setting_A 0.4;
	compensator_x_setting_A 0.4;
	CT_phase "A";
	PT_phase "A";
	regulation 0.10;
	Control MANUAL;
	Type A;
	tap_pos_A -1;
	tap_pos_B 0;
	tap_pos_C 0;
}

object regulator_configuration {
	name rc503;
	connect_type 1;
	band_center 120.000;
	band_width 1.0;
	time_delay 30.0;
	raise_taps 16;
	lower_taps 16;
	current_transducer_ratio 50;
	power_transducer_ratio 20;
	compensator_r_setting_A 0.4;
	compensator_r_setting_C 0.4;
	compensator_x_setting_A 0.4;
	compensator_x_setting_C 0.4;
	CT_phase "AC";
	PT_phase "AC";
	regulation 0.10;
	Control MANUAL;
	Type A;
	tap_pos_A 0;
	tap_pos_B 0;
	tap_pos_C -1;
}

object regulator_configuration {
	name rc504;
	connect_type 1;
	band_center 124.000;
	band_width 2.0;
	time_delay 30.0;
	raise_taps 16;
	lower_taps 16;
	current_transducer_ratio 300;
	power_transducer_ratio 20;
	compensator_r_setting_A 0.6;
	compensator_r_setting_B 1.4;
	compensator_r_setting_C 0.2;
	compensator_x_setting_A 1.3;
	compensator_x_setting_B 2.6;
	compensator_x_setting_C 1.4;
	CT_phase "ABC";
	PT_phase "ABC";
	regulation 0.10;
	Control MANUAL;
	Type A;
	tap_pos_A 8;
	tap_pos_B 1;
	tap_pos_C 5;
}
